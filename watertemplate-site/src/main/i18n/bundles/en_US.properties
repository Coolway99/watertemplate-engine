project.name = Water template engine
project.description = Lightweight, fast, logic-less and transparent
project.current-version = 1.1.1


menu.quick-start.text = Follow the basic steps to build your first templates with Water.

menu.documentation = Documentation
menu.documentation.text = See the full documentation to better understand Water goals.

menu.installation = Installation
menu.installation.text = Install Water in your project and start building your templates.

menu.examples = Examples
menu.examples.text = See some template examples to understand how to build them.


home.header.title = Home
home.motivation = Motivation
home.motivation.text = The Water template engine was created after a long period of insatisfaction with the existing template engines. <br /> Templating is a very old and also very simple problem that every web developer face at least once in life. A permissive API can be good to encourage creative problem solutions, but can also lead to bad design decisions. <br />  There are many built-in template systems in different frameworks, but Water offers a standalone solution to be used as you please. It offers an elegant API with a fast engine to build and parse your templates.

home.why-to-use? = So, why to use?
home.why-to-use?.text = If your looking for a template engine that encourages developers to make good design decisions and does what it's supposed to, Water is your best choice. With no extra features, it is very precise in solving the templating problem.

tutorials.header.title = Tutorials

quick-start.header.title = Quick start
quick-start.step1 = Install the dependencies
quick-start.step1.text = First thing you need to do to start building your templates is to download the dependencies. You can get them at the <a href=\"http://mavenrepository.com/artifact/org.watertemplate/watertemplate-engine/1.1.1\">maven central repository</a> and install it to your project. If you are using Maven, just copy this dependency to your pom.xml. Make sure you have both <b>Java 8</b> and <b>Maven 3</b>.

quick-start.step2 = Create your template class
quick-start.step2.text = Every template is composed by a <b>Template class</b> and a template file. This one-to-one complexity ensures you'll always know where things happen. Create your Template class.

quick-start.step3 = Create its template file
quick-start.step3.text = Create a file called `months_grid.html` and make sure it will be available in classpath:templates/en_US/months_grid.html during the execution of your Java program. If you are using Maven, store it to `src/main/resources/templates/en_US`.<br /><br /> This path is where the Water Interpreter searches for template files. `en_US` stands for the default Locale. At the end of this quick start tutorial a link with further explanation about the i18n project will help you to understand it better.

quick-start.step4 = Add values to your template
quick-start.step4.text = Now that you have a template file and a template class and both are linked through the `getFilePath` method, you have to provide values to our template. Actually if you try to render the MonthsGrid Template this way an exception will be thrown, because `year` and `months` properties were not provided. So add arguments to your template file.
quick-start-step4.text2 = The `add` method takes two Strings as arguments. The first one is the key and the second one is the value. <br /><br />The `addCollection` method is a specific version of the `add` method. It also takes a key, but the second argument must be a `Collection`. The third argument is a lambda expression which maps each value of the collection to be used inside the for loop. The `map` variable is of type `TemplateMap` and it also provides all sorts of `add` methods present on Template classes.

quick-start.step5 = Run it!
quick-start.step5.text = Now that you have both your template class and file and you have provided the correct values to the template file, it's time to run it. Write a simple main method like this and hit play.

quick-start.step6 = Further reading
quick-start.step6.text = Now that you know how to build a simple template, take a look at the other topics to take full advantage from the Water features:



installation.header.title = Installation
installation.title = Installation
installation.step1 = The engine
installation.step2 = The i18n Maven plugin
installation.step3 = JAX-RS Binding


documentation.header.title = Documentation
documentation.title = Documentation
documentation.step1 = Important conventions
documentation.step3 = Adding arguments
documentation.step4 = Nesting templates
documentation.step2 = Commands
documentation.step5 = i18n
documentation.step6 = Framework bindings


examples.header.title = Examples
examples.title = Examples